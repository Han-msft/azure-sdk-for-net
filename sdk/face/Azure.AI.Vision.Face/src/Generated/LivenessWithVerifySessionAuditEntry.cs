// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Azure.AI.Vision.Face
{
    /// <summary> Audit entry for a request in session. </summary>
    public partial class LivenessWithVerifySessionAuditEntry
    {
        /// <summary> Initializes a new instance of LivenessWithVerifySessionAuditEntry. </summary>
        /// <param name="sessionId"> Session ID of this audit entry. </param>
        /// <param name="requestId"> Request ID in the request header. </param>
        /// <param name="clientRequestId"> Client request ID in the request header. </param>
        /// <param name="receivedDateTime"> The UTC date time of the request. </param>
        /// <param name="request"> The request of this entry. </param>
        /// <param name="response"> The response of this entry. </param>
        /// <param name="digest"> The digest of the request body. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="sessionId"/>, <paramref name="requestId"/>, <paramref name="clientRequestId"/>, <paramref name="request"/>, <paramref name="response"/> or <paramref name="digest"/> is null. </exception>
        public LivenessWithVerifySessionAuditEntry(string sessionId, string requestId, string clientRequestId, DateTimeOffset receivedDateTime, SessionAuditEntryRequestInfo request, SessionAuditEntryResponseInfo response, string digest)
        {
            Argument.AssertNotNull(sessionId, nameof(sessionId));
            Argument.AssertNotNull(requestId, nameof(requestId));
            Argument.AssertNotNull(clientRequestId, nameof(clientRequestId));
            Argument.AssertNotNull(request, nameof(request));
            Argument.AssertNotNull(response, nameof(response));
            Argument.AssertNotNull(digest, nameof(digest));

            SessionId = sessionId;
            RequestId = requestId;
            ClientRequestId = clientRequestId;
            ReceivedDateTime = receivedDateTime;
            Request = request;
            Response = response;
            Digest = digest;
        }

        /// <summary> Initializes a new instance of LivenessWithVerifySessionAuditEntry. </summary>
        /// <param name="id"> ID of this audit entry. </param>
        /// <param name="sessionId"> Session ID of this audit entry. </param>
        /// <param name="requestId"> Request ID in the request header. </param>
        /// <param name="clientRequestId"> Client request ID in the request header. </param>
        /// <param name="receivedDateTime"> The UTC date time of the request. </param>
        /// <param name="request"> The request of this entry. </param>
        /// <param name="response"> The response of this entry. </param>
        /// <param name="digest"> The digest of the request body. </param>
        internal LivenessWithVerifySessionAuditEntry(long id, string sessionId, string requestId, string clientRequestId, DateTimeOffset receivedDateTime, SessionAuditEntryRequestInfo request, SessionAuditEntryResponseInfo response, string digest)
        {
            Id = id;
            SessionId = sessionId;
            RequestId = requestId;
            ClientRequestId = clientRequestId;
            ReceivedDateTime = receivedDateTime;
            Request = request;
            Response = response;
            Digest = digest;
        }

        /// <summary> ID of this audit entry. </summary>
        public long Id { get; }
        /// <summary> Session ID of this audit entry. </summary>
        public string SessionId { get; set; }
        /// <summary> Request ID in the request header. </summary>
        public string RequestId { get; set; }
        /// <summary> Client request ID in the request header. </summary>
        public string ClientRequestId { get; set; }
        /// <summary> The UTC date time of the request. </summary>
        public DateTimeOffset ReceivedDateTime { get; set; }
        /// <summary> The request of this entry. </summary>
        public SessionAuditEntryRequestInfo Request { get; set; }
        /// <summary> The response of this entry. </summary>
        public SessionAuditEntryResponseInfo Response { get; set; }
        /// <summary> The digest of the request body. </summary>
        public string Digest { get; set; }
    }
}
