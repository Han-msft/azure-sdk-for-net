<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="CreateLivenessSessionAsync(LivenessSessionCreationContent,CancellationToken)">
      <example>
This sample shows how to call CreateLivenessSessionAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

LivenessSessionCreationContent livenessSessionCreationContent = new LivenessSessionCreationContent("<deviceCorrelationId>", "<livenessOperationMode>");
Response<LivenessSessionCreationResult> response = await client.CreateLivenessSessionAsync(livenessSessionCreationContent);
]]></code>
This sample shows how to call CreateLivenessSessionAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

LivenessSessionCreationContent livenessSessionCreationContent = new LivenessSessionCreationContent("<deviceCorrelationId>", "<livenessOperationMode>")
{
    AuthTokenTimeToLiveInSeconds = 1234,
};
Response<LivenessSessionCreationResult> response = await client.CreateLivenessSessionAsync(livenessSessionCreationContent);
]]></code></example>
    </member>
    <member name="CreateLivenessSession(LivenessSessionCreationContent,CancellationToken)">
      <example>
This sample shows how to call CreateLivenessSession.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

LivenessSessionCreationContent livenessSessionCreationContent = new LivenessSessionCreationContent("<deviceCorrelationId>", "<livenessOperationMode>");
Response<LivenessSessionCreationResult> response = client.CreateLivenessSession(livenessSessionCreationContent);
]]></code>
This sample shows how to call CreateLivenessSession with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

LivenessSessionCreationContent livenessSessionCreationContent = new LivenessSessionCreationContent("<deviceCorrelationId>", "<livenessOperationMode>")
{
    AuthTokenTimeToLiveInSeconds = 1234,
};
Response<LivenessSessionCreationResult> response = client.CreateLivenessSession(livenessSessionCreationContent);
]]></code></example>
    </member>
    <member name="CreateLivenessSessionAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateLivenessSessionAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    deviceCorrelationId = "<deviceCorrelationId>",
    livenessOperationMode = "<livenessOperationMode>",
});
Response response = await client.CreateLivenessSessionAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("sessionId").ToString());
Console.WriteLine(result.GetProperty("authToken").ToString());
]]></code>
This sample shows how to call CreateLivenessSessionAsync with all request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    deviceCorrelationId = "<deviceCorrelationId>",
    authTokenTimeToLiveInSeconds = 1234,
    livenessOperationMode = "<livenessOperationMode>",
});
Response response = await client.CreateLivenessSessionAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("sessionId").ToString());
Console.WriteLine(result.GetProperty("authToken").ToString());
]]></code></example>
    </member>
    <member name="CreateLivenessSession(RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateLivenessSession and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    deviceCorrelationId = "<deviceCorrelationId>",
    livenessOperationMode = "<livenessOperationMode>",
});
Response response = client.CreateLivenessSession(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("sessionId").ToString());
Console.WriteLine(result.GetProperty("authToken").ToString());
]]></code>
This sample shows how to call CreateLivenessSession with all request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    deviceCorrelationId = "<deviceCorrelationId>",
    authTokenTimeToLiveInSeconds = 1234,
    livenessOperationMode = "<livenessOperationMode>",
});
Response response = client.CreateLivenessSession(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("sessionId").ToString());
Console.WriteLine(result.GetProperty("authToken").ToString());
]]></code></example>
    </member>
    <member name="GetLivenessSessionAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetLivenessSessionAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response<LivenessSession> response = await client.GetLivenessSessionAsync("<sessionId>");
]]></code>
This sample shows how to call GetLivenessSessionAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response<LivenessSession> response = await client.GetLivenessSessionAsync("<sessionId>");
]]></code></example>
    </member>
    <member name="GetLivenessSession(string,CancellationToken)">
      <example>
This sample shows how to call GetLivenessSession.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response<LivenessSession> response = client.GetLivenessSession("<sessionId>");
]]></code>
This sample shows how to call GetLivenessSession with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response<LivenessSession> response = client.GetLivenessSession("<sessionId>");
]]></code></example>
    </member>
    <member name="GetLivenessSessionAsync(string,RequestContext)">
      <example>
This sample shows how to call GetLivenessSessionAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response response = await client.GetLivenessSessionAsync("<sessionId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("sessionExpired").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("deviceCorrelationId").ToString());
Console.WriteLine(result.GetProperty("livenessOperationMode").ToString());
]]></code>
This sample shows how to call GetLivenessSessionAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response response = await client.GetLivenessSessionAsync("<sessionId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("sessionStartDateTime").ToString());
Console.WriteLine(result.GetProperty("sessionExpired").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("sessionId").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("requestId").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("clientRequestId").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("receivedDateTime").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("url").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("method").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("contentLength").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("contentType").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("userAgent").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("<key>").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("statusCode").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("digest").ToString());
Console.WriteLine(result.GetProperty("deviceCorrelationId").ToString());
Console.WriteLine(result.GetProperty("authTokenTimeToLiveInSeconds").ToString());
Console.WriteLine(result.GetProperty("livenessOperationMode").ToString());
]]></code></example>
    </member>
    <member name="GetLivenessSession(string,RequestContext)">
      <example>
This sample shows how to call GetLivenessSession and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response response = client.GetLivenessSession("<sessionId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("sessionExpired").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("deviceCorrelationId").ToString());
Console.WriteLine(result.GetProperty("livenessOperationMode").ToString());
]]></code>
This sample shows how to call GetLivenessSession with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response response = client.GetLivenessSession("<sessionId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("sessionStartDateTime").ToString());
Console.WriteLine(result.GetProperty("sessionExpired").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("sessionId").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("requestId").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("clientRequestId").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("receivedDateTime").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("url").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("method").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("contentLength").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("contentType").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("userAgent").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("<key>").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("statusCode").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("digest").ToString());
Console.WriteLine(result.GetProperty("deviceCorrelationId").ToString());
Console.WriteLine(result.GetProperty("authTokenTimeToLiveInSeconds").ToString());
Console.WriteLine(result.GetProperty("livenessOperationMode").ToString());
]]></code></example>
    </member>
    <member name="DeleteLivenessSessionAsync(string,RequestContext)">
      <example>
This sample shows how to call DeleteLivenessSessionAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response response = await client.DeleteLivenessSessionAsync("<sessionId>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DeleteLivenessSessionAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response response = await client.DeleteLivenessSessionAsync("<sessionId>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteLivenessSession(string,RequestContext)">
      <example>
This sample shows how to call DeleteLivenessSession.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response response = client.DeleteLivenessSession("<sessionId>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DeleteLivenessSession with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response response = client.DeleteLivenessSession("<sessionId>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetLivenessSessionsAsync(string,int?,CancellationToken)">
      <example>
This sample shows how to call GetLivenessSessionsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response<IReadOnlyList<LivenessSessionItem>> response = await client.GetLivenessSessionsAsync();
]]></code>
This sample shows how to call GetLivenessSessionsAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response<IReadOnlyList<LivenessSessionItem>> response = await client.GetLivenessSessionsAsync(start: "<start>", top: 1234);
]]></code></example>
    </member>
    <member name="GetLivenessSessions(string,int?,CancellationToken)">
      <example>
This sample shows how to call GetLivenessSessions.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response<IReadOnlyList<LivenessSessionItem>> response = client.GetLivenessSessions();
]]></code>
This sample shows how to call GetLivenessSessions with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response<IReadOnlyList<LivenessSessionItem>> response = client.GetLivenessSessions(start: "<start>", top: 1234);
]]></code></example>
    </member>
    <member name="GetLivenessSessionsAsync(string,int?,RequestContext)">
      <example>
This sample shows how to call GetLivenessSessionsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response response = await client.GetLivenessSessionsAsync(null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("id").ToString());
Console.WriteLine(result[0].GetProperty("createdDateTime").ToString());
Console.WriteLine(result[0].GetProperty("sessionExpired").ToString());
Console.WriteLine(result[0].GetProperty("deviceCorrelationId").ToString());
Console.WriteLine(result[0].GetProperty("livenessOperationMode").ToString());
]]></code>
This sample shows how to call GetLivenessSessionsAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response response = await client.GetLivenessSessionsAsync("<start>", 1234, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("id").ToString());
Console.WriteLine(result[0].GetProperty("createdDateTime").ToString());
Console.WriteLine(result[0].GetProperty("sessionStartDateTime").ToString());
Console.WriteLine(result[0].GetProperty("sessionExpired").ToString());
Console.WriteLine(result[0].GetProperty("deviceCorrelationId").ToString());
Console.WriteLine(result[0].GetProperty("authTokenTimeToLiveInSeconds").ToString());
Console.WriteLine(result[0].GetProperty("livenessOperationMode").ToString());
]]></code></example>
    </member>
    <member name="GetLivenessSessions(string,int?,RequestContext)">
      <example>
This sample shows how to call GetLivenessSessions and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response response = client.GetLivenessSessions(null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("id").ToString());
Console.WriteLine(result[0].GetProperty("createdDateTime").ToString());
Console.WriteLine(result[0].GetProperty("sessionExpired").ToString());
Console.WriteLine(result[0].GetProperty("deviceCorrelationId").ToString());
Console.WriteLine(result[0].GetProperty("livenessOperationMode").ToString());
]]></code>
This sample shows how to call GetLivenessSessions with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response response = client.GetLivenessSessions("<start>", 1234, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("id").ToString());
Console.WriteLine(result[0].GetProperty("createdDateTime").ToString());
Console.WriteLine(result[0].GetProperty("sessionStartDateTime").ToString());
Console.WriteLine(result[0].GetProperty("sessionExpired").ToString());
Console.WriteLine(result[0].GetProperty("deviceCorrelationId").ToString());
Console.WriteLine(result[0].GetProperty("authTokenTimeToLiveInSeconds").ToString());
Console.WriteLine(result[0].GetProperty("livenessOperationMode").ToString());
]]></code></example>
    </member>
    <member name="GetLivenessSessionAuditEntriesAsync(string,string,int?,CancellationToken)">
      <example>
This sample shows how to call GetLivenessSessionAuditEntriesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response<IReadOnlyList<LivenessSessionAuditEntry>> response = await client.GetLivenessSessionAuditEntriesAsync("<sessionId>");
]]></code>
This sample shows how to call GetLivenessSessionAuditEntriesAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response<IReadOnlyList<LivenessSessionAuditEntry>> response = await client.GetLivenessSessionAuditEntriesAsync("<sessionId>", start: "<start>", top: 1234);
]]></code></example>
    </member>
    <member name="GetLivenessSessionAuditEntries(string,string,int?,CancellationToken)">
      <example>
This sample shows how to call GetLivenessSessionAuditEntries.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response<IReadOnlyList<LivenessSessionAuditEntry>> response = client.GetLivenessSessionAuditEntries("<sessionId>");
]]></code>
This sample shows how to call GetLivenessSessionAuditEntries with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response<IReadOnlyList<LivenessSessionAuditEntry>> response = client.GetLivenessSessionAuditEntries("<sessionId>", start: "<start>", top: 1234);
]]></code></example>
    </member>
    <member name="GetLivenessSessionAuditEntriesAsync(string,string,int?,RequestContext)">
      <example>
This sample shows how to call GetLivenessSessionAuditEntriesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response response = await client.GetLivenessSessionAuditEntriesAsync("<sessionId>", null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("id").ToString());
Console.WriteLine(result[0].GetProperty("sessionId").ToString());
Console.WriteLine(result[0].GetProperty("requestId").ToString());
Console.WriteLine(result[0].GetProperty("clientRequestId").ToString());
Console.WriteLine(result[0].GetProperty("receivedDateTime").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("url").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("method").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("contentType").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("<key>").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("statusCode").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
Console.WriteLine(result[0].GetProperty("digest").ToString());
]]></code>
This sample shows how to call GetLivenessSessionAuditEntriesAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response response = await client.GetLivenessSessionAuditEntriesAsync("<sessionId>", "<start>", 1234, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("id").ToString());
Console.WriteLine(result[0].GetProperty("sessionId").ToString());
Console.WriteLine(result[0].GetProperty("requestId").ToString());
Console.WriteLine(result[0].GetProperty("clientRequestId").ToString());
Console.WriteLine(result[0].GetProperty("receivedDateTime").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("url").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("method").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("contentLength").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("contentType").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("userAgent").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("<key>").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("statusCode").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
Console.WriteLine(result[0].GetProperty("digest").ToString());
]]></code></example>
    </member>
    <member name="GetLivenessSessionAuditEntries(string,string,int?,RequestContext)">
      <example>
This sample shows how to call GetLivenessSessionAuditEntries and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response response = client.GetLivenessSessionAuditEntries("<sessionId>", null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("id").ToString());
Console.WriteLine(result[0].GetProperty("sessionId").ToString());
Console.WriteLine(result[0].GetProperty("requestId").ToString());
Console.WriteLine(result[0].GetProperty("clientRequestId").ToString());
Console.WriteLine(result[0].GetProperty("receivedDateTime").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("url").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("method").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("contentType").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("<key>").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("statusCode").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
Console.WriteLine(result[0].GetProperty("digest").ToString());
]]></code>
This sample shows how to call GetLivenessSessionAuditEntries with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response response = client.GetLivenessSessionAuditEntries("<sessionId>", "<start>", 1234, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("id").ToString());
Console.WriteLine(result[0].GetProperty("sessionId").ToString());
Console.WriteLine(result[0].GetProperty("requestId").ToString());
Console.WriteLine(result[0].GetProperty("clientRequestId").ToString());
Console.WriteLine(result[0].GetProperty("receivedDateTime").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("url").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("method").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("contentLength").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("contentType").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("userAgent").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("<key>").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("statusCode").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
Console.WriteLine(result[0].GetProperty("digest").ToString());
]]></code></example>
    </member>
    <member name="CreateLivenessWithVerifySessionByFormDataAsync(LivenessWithVerifySessionCreationContent,CancellationToken)">
      <example>
This sample shows how to call CreateLivenessWithVerifySessionByFormDataAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

LivenessWithVerifySessionCreationContent livenessWithVerifySessionCreationContent = new LivenessWithVerifySessionCreationContent(new LivenessSessionCreationContent("<deviceCorrelationId>", "<livenessOperationMode>"), BinaryData.FromObjectAsJson(new object()));
Response<LivenessSessionCreationResult> response = await client.CreateLivenessWithVerifySessionByFormDataAsync(livenessWithVerifySessionCreationContent);
]]></code>
This sample shows how to call CreateLivenessWithVerifySessionByFormDataAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

LivenessWithVerifySessionCreationContent livenessWithVerifySessionCreationContent = new LivenessWithVerifySessionCreationContent(new LivenessSessionCreationContent("<deviceCorrelationId>", "<livenessOperationMode>")
{
    AuthTokenTimeToLiveInSeconds = 1234,
}, BinaryData.FromObjectAsJson(new object()));
Response<LivenessSessionCreationResult> response = await client.CreateLivenessWithVerifySessionByFormDataAsync(livenessWithVerifySessionCreationContent);
]]></code></example>
    </member>
    <member name="CreateLivenessWithVerifySessionByFormData(LivenessWithVerifySessionCreationContent,CancellationToken)">
      <example>
This sample shows how to call CreateLivenessWithVerifySessionByFormData.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

LivenessWithVerifySessionCreationContent livenessWithVerifySessionCreationContent = new LivenessWithVerifySessionCreationContent(new LivenessSessionCreationContent("<deviceCorrelationId>", "<livenessOperationMode>"), BinaryData.FromObjectAsJson(new object()));
Response<LivenessSessionCreationResult> response = client.CreateLivenessWithVerifySessionByFormData(livenessWithVerifySessionCreationContent);
]]></code>
This sample shows how to call CreateLivenessWithVerifySessionByFormData with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

LivenessWithVerifySessionCreationContent livenessWithVerifySessionCreationContent = new LivenessWithVerifySessionCreationContent(new LivenessSessionCreationContent("<deviceCorrelationId>", "<livenessOperationMode>")
{
    AuthTokenTimeToLiveInSeconds = 1234,
}, BinaryData.FromObjectAsJson(new object()));
Response<LivenessSessionCreationResult> response = client.CreateLivenessWithVerifySessionByFormData(livenessWithVerifySessionCreationContent);
]]></code></example>
    </member>
    <member name="CreateLivenessWithVerifySessionByFormDataAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateLivenessWithVerifySessionByFormDataAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    Parameters = new
    {
        deviceCorrelationId = "<deviceCorrelationId>",
        livenessOperationMode = "<livenessOperationMode>",
    },
    VerifyImage = new object(),
});
Response response = await client.CreateLivenessWithVerifySessionByFormDataAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("sessionId").ToString());
Console.WriteLine(result.GetProperty("authToken").ToString());
]]></code>
This sample shows how to call CreateLivenessWithVerifySessionByFormDataAsync with all request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    Parameters = new
    {
        deviceCorrelationId = "<deviceCorrelationId>",
        authTokenTimeToLiveInSeconds = 1234,
        livenessOperationMode = "<livenessOperationMode>",
    },
    VerifyImage = new object(),
});
Response response = await client.CreateLivenessWithVerifySessionByFormDataAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("sessionId").ToString());
Console.WriteLine(result.GetProperty("authToken").ToString());
]]></code></example>
    </member>
    <member name="CreateLivenessWithVerifySessionByFormData(RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateLivenessWithVerifySessionByFormData and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    Parameters = new
    {
        deviceCorrelationId = "<deviceCorrelationId>",
        livenessOperationMode = "<livenessOperationMode>",
    },
    VerifyImage = new object(),
});
Response response = client.CreateLivenessWithVerifySessionByFormData(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("sessionId").ToString());
Console.WriteLine(result.GetProperty("authToken").ToString());
]]></code>
This sample shows how to call CreateLivenessWithVerifySessionByFormData with all request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    Parameters = new
    {
        deviceCorrelationId = "<deviceCorrelationId>",
        authTokenTimeToLiveInSeconds = 1234,
        livenessOperationMode = "<livenessOperationMode>",
    },
    VerifyImage = new object(),
});
Response response = client.CreateLivenessWithVerifySessionByFormData(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("sessionId").ToString());
Console.WriteLine(result.GetProperty("authToken").ToString());
]]></code></example>
    </member>
    <member name="CreateLivenessWithVerifySessionByJsonAsync(LivenessSessionCreationContent,CancellationToken)">
      <example>
This sample shows how to call CreateLivenessWithVerifySessionByJsonAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

LivenessSessionCreationContent livenessSessionCreationContent = new LivenessSessionCreationContent("<deviceCorrelationId>", "<livenessOperationMode>");
Response<LivenessSessionCreationResult> response = await client.CreateLivenessWithVerifySessionByJsonAsync(livenessSessionCreationContent);
]]></code>
This sample shows how to call CreateLivenessWithVerifySessionByJsonAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

LivenessSessionCreationContent livenessSessionCreationContent = new LivenessSessionCreationContent("<deviceCorrelationId>", "<livenessOperationMode>")
{
    AuthTokenTimeToLiveInSeconds = 1234,
};
Response<LivenessSessionCreationResult> response = await client.CreateLivenessWithVerifySessionByJsonAsync(livenessSessionCreationContent);
]]></code></example>
    </member>
    <member name="CreateLivenessWithVerifySessionByJson(LivenessSessionCreationContent,CancellationToken)">
      <example>
This sample shows how to call CreateLivenessWithVerifySessionByJson.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

LivenessSessionCreationContent livenessSessionCreationContent = new LivenessSessionCreationContent("<deviceCorrelationId>", "<livenessOperationMode>");
Response<LivenessSessionCreationResult> response = client.CreateLivenessWithVerifySessionByJson(livenessSessionCreationContent);
]]></code>
This sample shows how to call CreateLivenessWithVerifySessionByJson with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

LivenessSessionCreationContent livenessSessionCreationContent = new LivenessSessionCreationContent("<deviceCorrelationId>", "<livenessOperationMode>")
{
    AuthTokenTimeToLiveInSeconds = 1234,
};
Response<LivenessSessionCreationResult> response = client.CreateLivenessWithVerifySessionByJson(livenessSessionCreationContent);
]]></code></example>
    </member>
    <member name="CreateLivenessWithVerifySessionByJsonAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateLivenessWithVerifySessionByJsonAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    deviceCorrelationId = "<deviceCorrelationId>",
    livenessOperationMode = "<livenessOperationMode>",
});
Response response = await client.CreateLivenessWithVerifySessionByJsonAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("sessionId").ToString());
Console.WriteLine(result.GetProperty("authToken").ToString());
]]></code>
This sample shows how to call CreateLivenessWithVerifySessionByJsonAsync with all request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    deviceCorrelationId = "<deviceCorrelationId>",
    authTokenTimeToLiveInSeconds = 1234,
    livenessOperationMode = "<livenessOperationMode>",
});
Response response = await client.CreateLivenessWithVerifySessionByJsonAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("sessionId").ToString());
Console.WriteLine(result.GetProperty("authToken").ToString());
]]></code></example>
    </member>
    <member name="CreateLivenessWithVerifySessionByJson(RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateLivenessWithVerifySessionByJson and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    deviceCorrelationId = "<deviceCorrelationId>",
    livenessOperationMode = "<livenessOperationMode>",
});
Response response = client.CreateLivenessWithVerifySessionByJson(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("sessionId").ToString());
Console.WriteLine(result.GetProperty("authToken").ToString());
]]></code>
This sample shows how to call CreateLivenessWithVerifySessionByJson with all request content and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

using RequestContent content = RequestContent.Create(new
{
    deviceCorrelationId = "<deviceCorrelationId>",
    authTokenTimeToLiveInSeconds = 1234,
    livenessOperationMode = "<livenessOperationMode>",
});
Response response = client.CreateLivenessWithVerifySessionByJson(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("sessionId").ToString());
Console.WriteLine(result.GetProperty("authToken").ToString());
]]></code></example>
    </member>
    <member name="GetLivenessWithVerifySessionAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetLivenessWithVerifySessionAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response<LivenessWithVerifySession> response = await client.GetLivenessWithVerifySessionAsync("<sessionId>");
]]></code>
This sample shows how to call GetLivenessWithVerifySessionAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response<LivenessWithVerifySession> response = await client.GetLivenessWithVerifySessionAsync("<sessionId>");
]]></code></example>
    </member>
    <member name="GetLivenessWithVerifySession(string,CancellationToken)">
      <example>
This sample shows how to call GetLivenessWithVerifySession.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response<LivenessWithVerifySession> response = client.GetLivenessWithVerifySession("<sessionId>");
]]></code>
This sample shows how to call GetLivenessWithVerifySession with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response<LivenessWithVerifySession> response = client.GetLivenessWithVerifySession("<sessionId>");
]]></code></example>
    </member>
    <member name="GetLivenessWithVerifySessionAsync(string,RequestContext)">
      <example>
This sample shows how to call GetLivenessWithVerifySessionAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response response = await client.GetLivenessWithVerifySessionAsync("<sessionId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("sessionExpired").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("deviceCorrelationId").ToString());
Console.WriteLine(result.GetProperty("livenessOperationMode").ToString());
]]></code>
This sample shows how to call GetLivenessWithVerifySessionAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response response = await client.GetLivenessWithVerifySessionAsync("<sessionId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("sessionStartDateTime").ToString());
Console.WriteLine(result.GetProperty("sessionExpired").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("sessionId").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("requestId").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("clientRequestId").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("receivedDateTime").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("url").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("method").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("contentLength").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("contentType").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("userAgent").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("<key>").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("statusCode").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("digest").ToString());
Console.WriteLine(result.GetProperty("deviceCorrelationId").ToString());
Console.WriteLine(result.GetProperty("authTokenTimeToLiveInSeconds").ToString());
Console.WriteLine(result.GetProperty("livenessOperationMode").ToString());
]]></code></example>
    </member>
    <member name="GetLivenessWithVerifySession(string,RequestContext)">
      <example>
This sample shows how to call GetLivenessWithVerifySession and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response response = client.GetLivenessWithVerifySession("<sessionId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("sessionExpired").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("deviceCorrelationId").ToString());
Console.WriteLine(result.GetProperty("livenessOperationMode").ToString());
]]></code>
This sample shows how to call GetLivenessWithVerifySession with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response response = client.GetLivenessWithVerifySession("<sessionId>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("sessionStartDateTime").ToString());
Console.WriteLine(result.GetProperty("sessionExpired").ToString());
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("sessionId").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("requestId").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("clientRequestId").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("receivedDateTime").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("url").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("method").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("contentLength").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("contentType").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("request").GetProperty("userAgent").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("body").GetProperty("<key>").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("statusCode").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
Console.WriteLine(result.GetProperty("result").GetProperty("digest").ToString());
Console.WriteLine(result.GetProperty("deviceCorrelationId").ToString());
Console.WriteLine(result.GetProperty("authTokenTimeToLiveInSeconds").ToString());
Console.WriteLine(result.GetProperty("livenessOperationMode").ToString());
]]></code></example>
    </member>
    <member name="DeleteLivenessWithVerifySessionAsync(string,RequestContext)">
      <example>
This sample shows how to call DeleteLivenessWithVerifySessionAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response response = await client.DeleteLivenessWithVerifySessionAsync("<sessionId>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DeleteLivenessWithVerifySessionAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response response = await client.DeleteLivenessWithVerifySessionAsync("<sessionId>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteLivenessWithVerifySession(string,RequestContext)">
      <example>
This sample shows how to call DeleteLivenessWithVerifySession.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response response = client.DeleteLivenessWithVerifySession("<sessionId>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DeleteLivenessWithVerifySession with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response response = client.DeleteLivenessWithVerifySession("<sessionId>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetLivenessWithVerifySessionsAsync(string,int?,CancellationToken)">
      <example>
This sample shows how to call GetLivenessWithVerifySessionsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response<IReadOnlyList<LivenessSessionItem>> response = await client.GetLivenessWithVerifySessionsAsync();
]]></code>
This sample shows how to call GetLivenessWithVerifySessionsAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response<IReadOnlyList<LivenessSessionItem>> response = await client.GetLivenessWithVerifySessionsAsync(start: "<start>", top: 1234);
]]></code></example>
    </member>
    <member name="GetLivenessWithVerifySessions(string,int?,CancellationToken)">
      <example>
This sample shows how to call GetLivenessWithVerifySessions.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response<IReadOnlyList<LivenessSessionItem>> response = client.GetLivenessWithVerifySessions();
]]></code>
This sample shows how to call GetLivenessWithVerifySessions with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response<IReadOnlyList<LivenessSessionItem>> response = client.GetLivenessWithVerifySessions(start: "<start>", top: 1234);
]]></code></example>
    </member>
    <member name="GetLivenessWithVerifySessionsAsync(string,int?,RequestContext)">
      <example>
This sample shows how to call GetLivenessWithVerifySessionsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response response = await client.GetLivenessWithVerifySessionsAsync(null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("id").ToString());
Console.WriteLine(result[0].GetProperty("createdDateTime").ToString());
Console.WriteLine(result[0].GetProperty("sessionExpired").ToString());
Console.WriteLine(result[0].GetProperty("deviceCorrelationId").ToString());
Console.WriteLine(result[0].GetProperty("livenessOperationMode").ToString());
]]></code>
This sample shows how to call GetLivenessWithVerifySessionsAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response response = await client.GetLivenessWithVerifySessionsAsync("<start>", 1234, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("id").ToString());
Console.WriteLine(result[0].GetProperty("createdDateTime").ToString());
Console.WriteLine(result[0].GetProperty("sessionStartDateTime").ToString());
Console.WriteLine(result[0].GetProperty("sessionExpired").ToString());
Console.WriteLine(result[0].GetProperty("deviceCorrelationId").ToString());
Console.WriteLine(result[0].GetProperty("authTokenTimeToLiveInSeconds").ToString());
Console.WriteLine(result[0].GetProperty("livenessOperationMode").ToString());
]]></code></example>
    </member>
    <member name="GetLivenessWithVerifySessions(string,int?,RequestContext)">
      <example>
This sample shows how to call GetLivenessWithVerifySessions and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response response = client.GetLivenessWithVerifySessions(null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("id").ToString());
Console.WriteLine(result[0].GetProperty("createdDateTime").ToString());
Console.WriteLine(result[0].GetProperty("sessionExpired").ToString());
Console.WriteLine(result[0].GetProperty("deviceCorrelationId").ToString());
Console.WriteLine(result[0].GetProperty("livenessOperationMode").ToString());
]]></code>
This sample shows how to call GetLivenessWithVerifySessions with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response response = client.GetLivenessWithVerifySessions("<start>", 1234, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("id").ToString());
Console.WriteLine(result[0].GetProperty("createdDateTime").ToString());
Console.WriteLine(result[0].GetProperty("sessionStartDateTime").ToString());
Console.WriteLine(result[0].GetProperty("sessionExpired").ToString());
Console.WriteLine(result[0].GetProperty("deviceCorrelationId").ToString());
Console.WriteLine(result[0].GetProperty("authTokenTimeToLiveInSeconds").ToString());
Console.WriteLine(result[0].GetProperty("livenessOperationMode").ToString());
]]></code></example>
    </member>
    <member name="GetLivenessWithVerifySessionAuditEntriesAsync(string,string,int?,CancellationToken)">
      <example>
This sample shows how to call GetLivenessWithVerifySessionAuditEntriesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response<IReadOnlyList<LivenessWithVerifySessionAuditEntry>> response = await client.GetLivenessWithVerifySessionAuditEntriesAsync("<sessionId>");
]]></code>
This sample shows how to call GetLivenessWithVerifySessionAuditEntriesAsync with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response<IReadOnlyList<LivenessWithVerifySessionAuditEntry>> response = await client.GetLivenessWithVerifySessionAuditEntriesAsync("<sessionId>", start: "<start>", top: 1234);
]]></code></example>
    </member>
    <member name="GetLivenessWithVerifySessionAuditEntries(string,string,int?,CancellationToken)">
      <example>
This sample shows how to call GetLivenessWithVerifySessionAuditEntries.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response<IReadOnlyList<LivenessWithVerifySessionAuditEntry>> response = client.GetLivenessWithVerifySessionAuditEntries("<sessionId>");
]]></code>
This sample shows how to call GetLivenessWithVerifySessionAuditEntries with all parameters.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response<IReadOnlyList<LivenessWithVerifySessionAuditEntry>> response = client.GetLivenessWithVerifySessionAuditEntries("<sessionId>", start: "<start>", top: 1234);
]]></code></example>
    </member>
    <member name="GetLivenessWithVerifySessionAuditEntriesAsync(string,string,int?,RequestContext)">
      <example>
This sample shows how to call GetLivenessWithVerifySessionAuditEntriesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response response = await client.GetLivenessWithVerifySessionAuditEntriesAsync("<sessionId>", null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("id").ToString());
Console.WriteLine(result[0].GetProperty("sessionId").ToString());
Console.WriteLine(result[0].GetProperty("requestId").ToString());
Console.WriteLine(result[0].GetProperty("clientRequestId").ToString());
Console.WriteLine(result[0].GetProperty("receivedDateTime").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("url").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("method").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("contentType").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("<key>").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("statusCode").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
Console.WriteLine(result[0].GetProperty("digest").ToString());
]]></code>
This sample shows how to call GetLivenessWithVerifySessionAuditEntriesAsync with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response response = await client.GetLivenessWithVerifySessionAuditEntriesAsync("<sessionId>", "<start>", 1234, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("id").ToString());
Console.WriteLine(result[0].GetProperty("sessionId").ToString());
Console.WriteLine(result[0].GetProperty("requestId").ToString());
Console.WriteLine(result[0].GetProperty("clientRequestId").ToString());
Console.WriteLine(result[0].GetProperty("receivedDateTime").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("url").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("method").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("contentLength").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("contentType").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("userAgent").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("<key>").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("statusCode").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
Console.WriteLine(result[0].GetProperty("digest").ToString());
]]></code></example>
    </member>
    <member name="GetLivenessWithVerifySessionAuditEntries(string,string,int?,RequestContext)">
      <example>
This sample shows how to call GetLivenessWithVerifySessionAuditEntries and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response response = client.GetLivenessWithVerifySessionAuditEntries("<sessionId>", null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("id").ToString());
Console.WriteLine(result[0].GetProperty("sessionId").ToString());
Console.WriteLine(result[0].GetProperty("requestId").ToString());
Console.WriteLine(result[0].GetProperty("clientRequestId").ToString());
Console.WriteLine(result[0].GetProperty("receivedDateTime").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("url").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("method").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("contentType").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("<key>").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("statusCode").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
Console.WriteLine(result[0].GetProperty("digest").ToString());
]]></code>
This sample shows how to call GetLivenessWithVerifySessionAuditEntries with all parameters and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<https://my-service.azure.com>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
SessionClient client = new SessionClient(endpoint, credential);

Response response = client.GetLivenessWithVerifySessionAuditEntries("<sessionId>", "<start>", 1234, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("id").ToString());
Console.WriteLine(result[0].GetProperty("sessionId").ToString());
Console.WriteLine(result[0].GetProperty("requestId").ToString());
Console.WriteLine(result[0].GetProperty("clientRequestId").ToString());
Console.WriteLine(result[0].GetProperty("receivedDateTime").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("url").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("method").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("contentLength").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("contentType").ToString());
Console.WriteLine(result[0].GetProperty("request").GetProperty("userAgent").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("body").GetProperty("<key>").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("statusCode").ToString());
Console.WriteLine(result[0].GetProperty("response").GetProperty("latencyInMilliseconds").ToString());
Console.WriteLine(result[0].GetProperty("digest").ToString());
]]></code></example>
    </member>
  </members>
</doc>