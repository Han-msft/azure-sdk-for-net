// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Azure.AI.Vision.Face
{
    /// <summary> Session data returned for enumeration. </summary>
    public partial class LivenessSessionItem : LivenessSessionCreationContent
    {
        /// <summary> Initializes a new instance of LivenessSessionItem. </summary>
        /// <param name="deviceCorrelationId"> Device Correlation Id to use for linking multiple sessions together. </param>
        /// <param name="livenessOperationMode"> The operation mode for the liveness modal. </param>
        /// <param name="createdDateTime"> Session creation time in millisecond from epoch. </param>
        /// <param name="sessionExpired"> Whether or not the session is expired. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="deviceCorrelationId"/> or <paramref name="livenessOperationMode"/> is null. </exception>
        public LivenessSessionItem(string deviceCorrelationId, string livenessOperationMode, DateTimeOffset createdDateTime, bool sessionExpired) : base(deviceCorrelationId, livenessOperationMode)
        {
            Argument.AssertNotNull(deviceCorrelationId, nameof(deviceCorrelationId));
            Argument.AssertNotNull(livenessOperationMode, nameof(livenessOperationMode));

            CreatedDateTime = createdDateTime;
            SessionExpired = sessionExpired;
        }

        /// <summary> Initializes a new instance of LivenessSessionItem. </summary>
        /// <param name="deviceCorrelationId"> Device Correlation Id to use for linking multiple sessions together. </param>
        /// <param name="authTokenTimeToLiveInSeconds"> Session length in seconds. Range is 60 to 86400 seconds. </param>
        /// <param name="livenessOperationMode"> The operation mode for the liveness modal. </param>
        /// <param name="id"> Unique ID to reference this session. </param>
        /// <param name="createdDateTime"> Session creation time in millisecond from epoch. </param>
        /// <param name="sessionStartDateTime"> Session started time from session auth token. </param>
        /// <param name="sessionExpired"> Whether or not the session is expired. </param>
        internal LivenessSessionItem(string deviceCorrelationId, int? authTokenTimeToLiveInSeconds, string livenessOperationMode, string id, DateTimeOffset createdDateTime, DateTimeOffset? sessionStartDateTime, bool sessionExpired) : base(deviceCorrelationId, authTokenTimeToLiveInSeconds, livenessOperationMode)
        {
            Id = id;
            CreatedDateTime = createdDateTime;
            SessionStartDateTime = sessionStartDateTime;
            SessionExpired = sessionExpired;
        }

        /// <summary> Unique ID to reference this session. </summary>
        public string Id { get; }
        /// <summary> Session creation time in millisecond from epoch. </summary>
        public DateTimeOffset CreatedDateTime { get; set; }
        /// <summary> Session started time from session auth token. </summary>
        public DateTimeOffset? SessionStartDateTime { get; set; }
        /// <summary> Whether or not the session is expired. </summary>
        public bool SessionExpired { get; set; }
    }
}
